name: rust release

on:
    repository_dispatch:
        types: [ stable-release, beta-release ]
    schedule:
        - cron: '0 3 * * *'

jobs:
    generate-build-number:
        runs-on: ubuntu-latest
        outputs:
            build_number: ${{ steps.buildnumber.outputs.build_number }}
        steps:
            - name: Generate build number
              uses: einaregilsson/build-number@v2
              id: buildnumber
              with:
                  token: ${{ secrets.github_token }}
                  prefix: rust

    get-release-branch:
        runs-on: ubuntu-latest
        outputs:
            release-branch: ${{ steps.get-release-branch.outputs.release-branch }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - id: get-release-branch
              run: |
                  branch=$(python scripts/get_release_branch.py)
                  echo "::set-output name=release-branch::$branch"

    update-changelog-link:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Set up git user
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"

            - name: Update changelog link
              if: github.event_name == 'repository_dispatch' && github.event.action == 'stable-release' && github.event.client_payload.update_changelog
              run: python scripts/update-changelog-link.py --token ${{ secrets.WORKFLOW_GITHUB_TOKEN }}

    get-channel:
        runs-on: ubuntu-latest
        outputs:
            channel: ${{ steps.get-channel.outputs.channel }}
        steps:
            - id: get-channel
              run: |
                if ${{ github.event_name == 'repository_dispatch' && github.event.action == 'stable-release' }}
                then
                  echo "::set-output name=channel::stable"
                else
                  echo "::set-output name=channel::beta"
                fi

    fetch-latest-changes:
        runs-on: ubuntu-latest
        needs: [ get-release-branch, update-changelog-link, get-channel ]
        outputs:
            rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}
            rust-release: ${{ steps.fetch-commits.outputs.rust-release }}
            toml-commit: ${{ steps.fetch-commits.outputs.toml-commit }}
            toml-release: ${{ steps.fetch-commits.outputs.toml-release }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ needs.get-release-branch.outputs.release-branch }}
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Fetch latest commits
              id: fetch-commits
              run: |
                  echo "::set-output name=rust-commit::$(git log -n 1 --format=format:%H)"
                  echo "::set-output name=rust-release::$(python scripts/get_tag_commit.py --tag "rust-${{ needs.get-channel.outputs.channel }}")"
                  echo "::set-output name=toml-commit::$(git log -n 1 --format=format:%H intellij-toml *gradle*)"
                  echo "::set-output name=toml-release::$(python scripts/get_tag_commit.py --tag "toml-${{ needs.get-channel.outputs.channel }}")"

            - name: Show commits
              run: |
                  echo "rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}"
                  echo "rust-release: ${{ steps.fetch-commits.outputs.rust-release }}"
                  echo "toml-commit: ${{ steps.fetch-commits.outputs.toml-commit }}"
                  echo "toml-release: ${{ steps.fetch-commits.outputs.toml-release }}"

    build:
        needs: [ generate-build-number, get-release-branch, update-changelog-link, get-channel, fetch-latest-changes ]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                platform-version: [ 201, 202 ]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ needs.get-release-branch.outputs.release-branch }}

            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8

            - name: Set up env variables
                # see https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
              run: |
                  echo "::set-env name=CI::true"
                  echo "::set-env name=ORG_GRADLE_PROJECT_buildNumber::${{ needs.generate-build-number.outputs.build_number }}"
                  echo "::set-env name=ORG_GRADLE_PROJECT_platformVersion::${{ matrix.platform-version }}"
                  echo "::set-env name=ORG_GRADLE_PROJECT_enableBuildSearchableOptions::true"
                  echo "::set-env name=ORG_GRADLE_PROJECT_publishChannel::${{ needs.get-channel.outputs.channel }}"
                  echo "::set-env name=ORG_GRADLE_PROJECT_publishToken::${{ secrets.plugin_bot_token }}"

            - name: Publish rust plugin
              if: needs.fetch-latest-changes.outputs.rust-commit != needs.fetch-latest-changes.outputs.rust-release
              uses: eskatos/gradle-command-action@v1
              with:
                  arguments: :plugin:publishPlugin

            - name: Publish toml plugin
              if: needs.fetch-latest-changes.outputs.toml-commit != needs.fetch-latest-changes.outputs.toml-release
              uses: eskatos/gradle-command-action@v1
              with:
                  arguments: :intellij-toml:publishPlugin

    save-commit:
        needs: [ get-channel, fetch-latest-changes, build ]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Save commits
              run: |
                  python scripts/save_tag.py --token ${{ secrets.WORKFLOW_GITHUB_TOKEN }} --tag rust-${{ needs.get-channel.outputs.channel }} --commit ${{ needs.fetch-latest-changes.outputs.rust-commit }}
                  python scripts/save_tag.py --token ${{ secrets.WORKFLOW_GITHUB_TOKEN }} --tag toml-${{ needs.get-channel.outputs.channel }} --commit ${{ needs.fetch-latest-changes.outputs.toml-commit }}
